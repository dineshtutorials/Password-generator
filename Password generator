import random
import string
import argparse

def generate_strong_password(length=16):
    if length < 8:
        raise ValueError("Password length should be at least 8 characters for good security.")

    # Character sets
    lowercase = string.ascii_lowercase
    uppercase = string.ascii_uppercase
    digits = string.digits
    special_chars = "!@#$%^&*()-_=+[]{}|;:,.<>?/"

    # Ensure password has at least one character from each category
    password = [
        random.choice(lowercase),
        random.choice(uppercase),
        random.choice(digits),
        random.choice(special_chars),
    ]

    # Fill the rest with random characters from all sets
    all_chars = lowercase + uppercase + digits + special_chars
    password += random.choices(all_chars, k=length - 4)

    # Shuffle to avoid predictable structure
    random.shuffle(password)

    return ''.join(password)

def main():
    parser = argparse.ArgumentParser(description="High-End Security Password Generator")
    parser.add_argument(
        "-l", "--length",
        type=int,
        default=16,
        help="Length of the password (minimum 8)"
    )
    args = parser.parse_args()

    try:
        password = generate_strong_password(args.length)
        print(f"Generated password: {password}")
    except ValueError as ve:
        print(f"Error: {ve}")

if _name_ == "_main_":
    main()
